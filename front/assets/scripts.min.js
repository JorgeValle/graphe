var _self = "undefined" != typeof window ? window : "undefined" != typeof WorkerGlobalScope && self instanceof WorkerGlobalScope ? self : {},
    Prism = function () {
  var e = /\blang(?:uage)?-(\w+)\b/i,
      t = 0,
      i = _self.Prism = { manual: _self.Prism && _self.Prism.manual, disableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler, util: { encode: function (e) {
        return e instanceof n ? new n(e.type, i.util.encode(e.content), e.alias) : "Array" === i.util.type(e) ? e.map(i.util.encode) : e.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/\u00a0/g, " ");
      }, type: function (e) {
        return Object.prototype.toString.call(e).match(/\[object (\w+)\]/)[1];
      }, objId: function (e) {
        return e.__id || Object.defineProperty(e, "__id", { value: ++t }), e.__id;
      }, clone: function (e, t) {
        var n = i.util.type(e);switch (t = t || {}, n) {case "Object":
            if (t[i.util.objId(e)]) return t[i.util.objId(e)];var s = {};for (var a in t[i.util.objId(e)] = s, e) e.hasOwnProperty(a) && (s[a] = i.util.clone(e[a], t));return s;case "Array":
            if (t[i.util.objId(e)]) return t[i.util.objId(e)];s = [];return t[i.util.objId(e)] = s, e.forEach(function (e, n) {
              s[n] = i.util.clone(e, t);
            }), s;}return e;
      } }, languages: { extend: function (e, t) {
        var n = i.util.clone(i.languages[e]);for (var s in t) n[s] = t[s];return n;
      }, insertBefore: function (e, t, n, s) {
        var a = (s = s || i.languages)[e];if (2 == arguments.length) {
          for (var r in n = arguments[1]) n.hasOwnProperty(r) && (a[r] = n[r]);return a;
        }var o = {};for (var l in a) if (a.hasOwnProperty(l)) {
          if (l == t) for (var r in n) n.hasOwnProperty(r) && (o[r] = n[r]);o[l] = a[l];
        }return i.languages.DFS(i.languages, function (t, i) {
          i === s[e] && t != e && (this[t] = o);
        }), s[e] = o;
      }, DFS: function (e, t, n, s) {
        for (var a in s = s || {}, e) e.hasOwnProperty(a) && (t.call(e, a, e[a], n || a), "Object" !== i.util.type(e[a]) || s[i.util.objId(e[a])] ? "Array" !== i.util.type(e[a]) || s[i.util.objId(e[a])] || (s[i.util.objId(e[a])] = !0, i.languages.DFS(e[a], t, a, s)) : (s[i.util.objId(e[a])] = !0, i.languages.DFS(e[a], t, null, s)));
      } }, plugins: {}, highlightAll: function (e, t) {
      i.highlightAllUnder(document, e, t);
    }, highlightAllUnder: function (e, t, n) {
      var s = { callback: n, selector: 'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code' };i.hooks.run("before-highlightall", s);for (var a, r = s.elements || e.querySelectorAll(s.selector), o = 0; a = r[o++];) i.highlightElement(a, !0 === t, s.callback);
    }, highlightElement: function (t, n, s) {
      for (var a, r, o = t; o && !e.test(o.className);) o = o.parentNode;o && (a = (o.className.match(e) || [, ""])[1].toLowerCase(), r = i.languages[a]), t.className = t.className.replace(e, "").replace(/\s+/g, " ") + " language-" + a, t.parentNode && (o = t.parentNode, /pre/i.test(o.nodeName) && (o.className = o.className.replace(e, "").replace(/\s+/g, " ") + " language-" + a));var l = { element: t, language: a, grammar: r, code: t.textContent };if (i.hooks.run("before-sanity-check", l), !l.code || !l.grammar) return l.code && (i.hooks.run("before-highlight", l), l.element.textContent = l.code, i.hooks.run("after-highlight", l)), void i.hooks.run("complete", l);if (i.hooks.run("before-highlight", l), n && _self.Worker) {
        var c = new Worker(i.filename);c.onmessage = function (e) {
          l.highlightedCode = e.data, i.hooks.run("before-insert", l), l.element.innerHTML = l.highlightedCode, s && s.call(l.element), i.hooks.run("after-highlight", l), i.hooks.run("complete", l);
        }, c.postMessage(JSON.stringify({ language: l.language, code: l.code, immediateClose: !0 }));
      } else l.highlightedCode = i.highlight(l.code, l.grammar, l.language), i.hooks.run("before-insert", l), l.element.innerHTML = l.highlightedCode, s && s.call(t), i.hooks.run("after-highlight", l), i.hooks.run("complete", l);
    }, highlight: function (e, t, s) {
      var a = { text: e, grammar: t, language: s };return a.tokens = i.tokenize(e, t), i.hooks.run("after-tokenize", a), n.stringify(i.util.encode(a.tokens), s);
    }, matchGrammar: function (e, t, n, s, a, r, o) {
      var l = i.Token;for (var c in n) if (n.hasOwnProperty(c) && n[c]) {
        if (c == o) return;var p = n[c];p = "Array" === i.util.type(p) ? p : [p];for (var h = 0; h < p.length; ++h) {
          var d = p[h],
              u = d.inside,
              g = !!d.lookbehind,
              m = !!d.greedy,
              f = 0,
              b = d.alias;if (m && !d.pattern.global) {
            var y = d.pattern.toString().match(/[imuy]*$/)[0];d.pattern = RegExp(d.pattern.source, y + "g");
          }d = d.pattern || d;for (var v = s, S = a; v < t.length; S += t[v].length, ++v) {
            var w = t[v];if (t.length > e.length) return;if (!(w instanceof l)) {
              d.lastIndex = 0;var T = 1;if (!(_ = d.exec(w)) && m && v != t.length - 1) {
                if (d.lastIndex = S, !(_ = d.exec(e))) break;for (var k = _.index + (g ? _[1].length : 0), P = _.index + _[0].length, E = v, x = S, O = t.length; E < O && (x < P || !t[E].type && !t[E - 1].greedy); ++E) k >= (x += t[E].length) && (++v, S = x);if (t[v] instanceof l || t[E - 1].greedy) continue;T = E - v, w = e.slice(S, x), _.index -= S;
              }if (_) {
                g && (f = _[1] ? _[1].length : 0);P = (k = _.index + f) + (_ = _[0].slice(f)).length;var _,
                    I = w.slice(0, k),
                    C = w.slice(P),
                    A = [v, T];I && (++v, S += I.length, A.push(I));var F = new l(c, u ? i.tokenize(_, u) : _, b, _, m);if (A.push(F), C && A.push(C), Array.prototype.splice.apply(t, A), 1 != T && i.matchGrammar(e, t, n, v, S, !0, c), r) break;
              } else if (r) break;
            }
          }
        }
      }
    }, tokenize: function (e, t, n) {
      var s = [e],
          a = t.rest;if (a) {
        for (var r in a) t[r] = a[r];delete t.rest;
      }return i.matchGrammar(e, s, t, 0, 0, !1), s;
    }, hooks: { all: {}, add: function (e, t) {
        var n = i.hooks.all;n[e] = n[e] || [], n[e].push(t);
      }, run: function (e, t) {
        var n = i.hooks.all[e];if (n && n.length) for (var s, a = 0; s = n[a++];) s(t);
      } } },
      n = i.Token = function (e, t, i, n, s) {
    this.type = e, this.content = t, this.alias = i, this.length = 0 | (n || "").length, this.greedy = !!s;
  };if (n.stringify = function (e, t, s) {
    if ("string" == typeof e) return e;if ("Array" === i.util.type(e)) return e.map(function (i) {
      return n.stringify(i, t, e);
    }).join("");var a = { type: e.type, content: n.stringify(e.content, t, s), tag: "span", classes: ["token", e.type], attributes: {}, language: t, parent: s };if (e.alias) {
      var r = "Array" === i.util.type(e.alias) ? e.alias : [e.alias];Array.prototype.push.apply(a.classes, r);
    }i.hooks.run("wrap", a);var o = Object.keys(a.attributes).map(function (e) {
      return e + '="' + (a.attributes[e] || "").replace(/"/g, "&quot;") + '"';
    }).join(" ");return "<" + a.tag + ' class="' + a.classes.join(" ") + '"' + (o ? " " + o : "") + ">" + a.content + "</" + a.tag + ">";
  }, !_self.document) return _self.addEventListener ? (i.disableWorkerMessageHandler || _self.addEventListener("message", function (e) {
    var t = JSON.parse(e.data),
        n = t.language,
        s = t.code,
        a = t.immediateClose;_self.postMessage(i.highlight(s, i.languages[n], n)), a && _self.close();
  }, !1), _self.Prism) : _self.Prism;var s = document.currentScript || [].slice.call(document.getElementsByTagName("script")).pop();return s && (i.filename = s.src, i.manual || s.hasAttribute("data-manual") || ("loading" !== document.readyState ? window.requestAnimationFrame ? window.requestAnimationFrame(i.highlightAll) : window.setTimeout(i.highlightAll, 16) : document.addEventListener("DOMContentLoaded", i.highlightAll))), _self.Prism;
}();"undefined" != typeof module && module.exports && (module.exports = Prism), "undefined" != typeof global && (global.Prism = Prism), Prism.languages.markup = { comment: /<!--[\s\S]*?-->/, prolog: /<\?[\s\S]+?\?>/, doctype: /<!DOCTYPE[\s\S]+?>/i, cdata: /<!\[CDATA\[[\s\S]*?]]>/i, tag: { pattern: /<\/?(?!\d)[^\s>\/=$<%]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+))?)*\s*\/?>/i, greedy: !0, inside: { tag: { pattern: /^<\/?[^\s>\/]+/i, inside: { punctuation: /^<\/?/, namespace: /^[^\s>\/:]+:/ } }, "attr-value": { pattern: /=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+)/i, inside: { punctuation: [/^=/, { pattern: /(^|[^\\])["']/, lookbehind: !0 }] } }, punctuation: /\/?>/, "attr-name": { pattern: /[^\s>\/]+/, inside: { namespace: /^[^\s>\/:]+:/ } } } }, entity: /&#?[\da-z]{1,8};/i }, Prism.languages.markup.tag.inside["attr-value"].inside.entity = Prism.languages.markup.entity, Prism.hooks.add("wrap", function (e) {
  "entity" === e.type && (e.attributes.title = e.content.replace(/&amp;/, "&"));
}), Prism.languages.xml = Prism.languages.markup, Prism.languages.html = Prism.languages.markup, Prism.languages.mathml = Prism.languages.markup, Prism.languages.svg = Prism.languages.markup, Prism.languages.css = { comment: /\/\*[\s\S]*?\*\//, atrule: { pattern: /@[\w-]+?.*?(?:;|(?=\s*\{))/i, inside: { rule: /@[\w-]+/ } }, url: /url\((?:(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1|.*?)\)/i, selector: /[^{}\s][^{};]*?(?=\s*\{)/, string: { pattern: /("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/, greedy: !0 }, property: /[-_a-z\xA0-\uFFFF][-\w\xA0-\uFFFF]*(?=\s*:)/i, important: /\B!important\b/i, function: /[-a-z0-9]+(?=\()/i, punctuation: /[(){};:]/ }, Prism.languages.css.atrule.inside.rest = Prism.languages.css, Prism.languages.markup && (Prism.languages.insertBefore("markup", "tag", { style: { pattern: /(<style[\s\S]*?>)[\s\S]*?(?=<\/style>)/i, lookbehind: !0, inside: Prism.languages.css, alias: "language-css", greedy: !0 } }), Prism.languages.insertBefore("inside", "attr-value", { "style-attr": { pattern: /\s*style=("|')(?:\\[\s\S]|(?!\1)[^\\])*\1/i, inside: { "attr-name": { pattern: /^\s*style/i, inside: Prism.languages.markup.tag.inside }, punctuation: /^\s*=\s*['"]|['"]\s*$/, "attr-value": { pattern: /.+/i, inside: Prism.languages.css } }, alias: "language-css" } }, Prism.languages.markup.tag)), Prism.languages.clike = { comment: [{ pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/, lookbehind: !0 }, { pattern: /(^|[^\\:])\/\/.*/, lookbehind: !0 }], string: { pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/, greedy: !0 }, "class-name": { pattern: /((?:\b(?:class|interface|extends|implements|trait|instanceof|new)\s+)|(?:catch\s+\())[\w.\\]+/i, lookbehind: !0, inside: { punctuation: /[.\\]/ } }, keyword: /\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/, boolean: /\b(?:true|false)\b/, function: /[a-z0-9_]+(?=\()/i, number: /\b0x[\da-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?/i, operator: /--?|\+\+?|!=?=?|<=?|>=?|==?=?|&&?|\|\|?|\?|\*|\/|~|\^|%/, punctuation: /[{}[\];(),.:]/ }, Prism.languages.javascript = Prism.languages.extend("clike", { keyword: /\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\b/, number: /\b(?:0[xX][\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+|NaN|Infinity)\b|(?:\b\d+\.?\d*|\B\.\d+)(?:[Ee][+-]?\d+)?/, function: /[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*\()/i, operator: /-[-=]?|\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\|[|=]?|\*\*?=?|\/=?|~|\^=?|%=?|\?|\.{3}/ }), Prism.languages.insertBefore("javascript", "keyword", { regex: { pattern: /(^|[^/])\/(?!\/)(\[[^\]\r\n]+]|\\.|[^/\\\[\r\n])+\/[gimyu]{0,5}(?=\s*($|[\r\n,.;})]))/, lookbehind: !0, greedy: !0 }, "function-variable": { pattern: /[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*=\s*(?:function\b|(?:\([^()]*\)|[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)\s*=>))/i, alias: "function" } }), Prism.languages.insertBefore("javascript", "string", { "template-string": { pattern: /`(?:\\[\s\S]|[^\\`])*`/, greedy: !0, inside: { interpolation: { pattern: /\$\{[^}]+\}/, inside: { "interpolation-punctuation": { pattern: /^\$\{|\}$/, alias: "punctuation" }, rest: Prism.languages.javascript } }, string: /[\s\S]+/ } } }), Prism.languages.markup && Prism.languages.insertBefore("markup", "tag", { script: { pattern: /(<script[\s\S]*?>)[\s\S]*?(?=<\/script>)/i, lookbehind: !0, inside: Prism.languages.javascript, alias: "language-javascript", greedy: !0 } }), Prism.languages.js = Prism.languages.javascript, "undefined" != typeof self && self.Prism && self.document && document.querySelector && (self.Prism.fileHighlight = function () {
  var e = { js: "javascript", py: "python", rb: "ruby", ps1: "powershell", psm1: "powershell", sh: "bash", bat: "batch", h: "c", tex: "latex" };Array.prototype.slice.call(document.querySelectorAll("pre[data-src]")).forEach(function (t) {
    for (var i, n = t.getAttribute("data-src"), s = t, a = /\blang(?:uage)?-(?!\*)(\w+)\b/i; s && !a.test(s.className);) s = s.parentNode;if (s && (i = (t.className.match(a) || [, ""])[1]), !i) {
      var r = (n.match(/\.(\w+)$/) || [, ""])[1];i = e[r] || r;
    }var o = document.createElement("code");o.className = "language-" + i, t.textContent = "", o.textContent = "Loading…", t.appendChild(o);var l = new XMLHttpRequest();l.open("GET", n, !0), l.onreadystatechange = function () {
      4 == l.readyState && (l.status < 400 && l.responseText ? (o.textContent = l.responseText, Prism.highlightElement(o)) : l.status >= 400 ? o.textContent = "✖ Error " + l.status + " while fetching file: " + l.statusText : o.textContent = "✖ Error: File does not exist or is empty");
    }, l.send(null);
  });
}, document.addEventListener("DOMContentLoaded", self.Prism.fileHighlight));const StickySidebar = (() => {
  const e = ".stickySidebar",
        t = { topSpacing: 0, bottomSpacing: 0, containerSelector: !1, innerWrapperSelector: ".inner-wrapper-sticky", stickyClass: "is-affixed", resizeSensor: !0, minWidth: !1 };class i {
    constructor(e, n = {}) {
      if (this.options = i.extend(t, n), this.sidebar = "string" == typeof e ? document.querySelector(e) : e, void 0 === this.sidebar) throw new Error("There is no specific sidebar element.");this.sidebarInner = !1, this.container = this.sidebar.parentElement, this.affixedType = "STATIC", this.direction = "down", this.support = { transform: !1, transform3d: !1 }, this._initialized = !1, this._reStyle = !1, this._breakpoint = !1, this._resizeListeners = [], this.dimensions = { translateY: 0, topSpacing: 0, lastTopSpacing: 0, bottomSpacing: 0, lastBottomSpacing: 0, sidebarHeight: 0, sidebarWidth: 0, containerTop: 0, containerHeight: 0, viewportHeight: 0, viewportTop: 0, lastViewportTop: 0 }, ["handleEvent"].forEach(e => {
        this[e] = this[e].bind(this);
      }), this.initialize();
    }initialize() {
      if (this._setSupportFeatures(), this.options.innerWrapperSelector && (this.sidebarInner = this.sidebar.querySelector(this.options.innerWrapperSelector), null === this.sidebarInner && (this.sidebarInner = !1)), !this.sidebarInner) {
        let e = document.createElement("div");for (e.setAttribute("class", "inner-wrapper-sticky"), this.sidebar.appendChild(e); this.sidebar.firstChild != e;) e.appendChild(this.sidebar.firstChild);this.sidebarInner = this.sidebar.querySelector(".inner-wrapper-sticky");
      }if (this.options.containerSelector) {
        let e = document.querySelectorAll(this.options.containerSelector);if ((e = Array.prototype.slice.call(e)).forEach((e, t) => {
          e.contains(this.sidebar) && (this.container = e);
        }), !e.length) throw new Error("The container does not contains on the sidebar.");
      }"function" != typeof this.options.topSpacing && (this.options.topSpacing = parseInt(this.options.topSpacing) || 0), "function" != typeof this.options.bottomSpacing && (this.options.bottomSpacing = parseInt(this.options.bottomSpacing) || 0), this._widthBreakpoint(), this.calcDimensions(), this.stickyPosition(), this.bindEvents(), this._initialized = !0;
    }bindEvents() {
      window.addEventListener("resize", this, { passive: !0, capture: !1 }), window.addEventListener("scroll", this, { passive: !0, capture: !1 }), this.sidebar.addEventListener("update" + e, this), this.options.resizeSensor && "undefined" != typeof ResizeSensor && (new ResizeSensor(this.sidebarInner, this.handleEvent), new ResizeSensor(this.container, this.handleEvent));
    }handleEvent(e) {
      this.updateSticky(e);
    }calcDimensions() {
      if (!this._breakpoint) {
        var e = this.dimensions;e.containerTop = i.offsetRelative(this.container).top, e.containerHeight = this.container.clientHeight, e.containerBottom = e.containerTop + e.containerHeight, e.sidebarHeight = this.sidebarInner.offsetHeight, e.sidebarWidth = this.sidebar.offsetWidth, e.viewportHeight = window.innerHeight, this._calcDimensionsWithScroll();
      }
    }_calcDimensionsWithScroll() {
      var e = this.dimensions;e.sidebarLeft = i.offsetRelative(this.sidebar).left, e.viewportTop = document.documentElement.scrollTop || document.body.scrollTop, e.viewportBottom = e.viewportTop + e.viewportHeight, e.viewportLeft = document.documentElement.scrollLeft || document.body.scrollLeft, e.topSpacing = this.options.topSpacing, e.bottomSpacing = this.options.bottomSpacing, "function" == typeof e.topSpacing && (e.topSpacing = parseInt(e.topSpacing(this.sidebar)) || 0), "function" == typeof e.bottomSpacing && (e.bottomSpacing = parseInt(e.bottomSpacing(this.sidebar)) || 0), "VIEWPORT-TOP" === this.affixedType ? e.topSpacing < e.lastTopSpacing && (e.translateY += e.lastTopSpacing - e.topSpacing, this._reStyle = !0) : "VIEWPORT-BOTTOM" === this.affixedType && e.bottomSpacing < e.lastBottomSpacing && (e.translateY += e.lastBottomSpacing - e.bottomSpacing, this._reStyle = !0), e.lastTopSpacing = e.topSpacing, e.lastBottomSpacing = e.bottomSpacing;
    }isSidebarFitsViewport() {
      return this.dimensions.sidebarHeight < this.dimensions.viewportHeight;
    }observeScrollDir() {
      var e = this.dimensions;if (e.lastViewportTop !== e.viewportTop) {
        var t = "down" === this.direction ? Math.min : Math.max;e.viewportTop === t(e.viewportTop, e.lastViewportTop) && (this.direction = "down" === this.direction ? "up" : "down");
      }
    }getAffixType() {
      var e = this.dimensions,
          t = !1;this._calcDimensionsWithScroll();var i = e.sidebarHeight + e.containerTop,
          n = e.viewportTop + e.topSpacing,
          s = e.viewportBottom - e.bottomSpacing;return "up" === this.direction ? n <= e.containerTop ? (e.translateY = 0, t = "STATIC") : n <= e.translateY + e.containerTop ? (e.translateY = n - e.containerTop, t = "VIEWPORT-TOP") : !this.isSidebarFitsViewport() && e.containerTop <= n && (t = "VIEWPORT-UNBOTTOM") : this.isSidebarFitsViewport() ? e.sidebarHeight + n >= e.containerBottom ? (e.translateY = e.containerBottom - i, t = "CONTAINER-BOTTOM") : n >= e.containerTop && (e.translateY = n - e.containerTop, t = "VIEWPORT-TOP") : e.containerBottom <= s ? (e.translateY = e.containerBottom - i, t = "CONTAINER-BOTTOM") : i + e.translateY <= s ? (e.translateY = s - i, t = "VIEWPORT-BOTTOM") : e.containerTop + e.translateY <= n && (t = "VIEWPORT-UNBOTTOM"), e.translateY = Math.max(0, e.translateY), e.translateY = Math.min(e.containerHeight, e.translateY), e.lastViewportTop = e.viewportTop, t;
    }_getStyle(e) {
      if (void 0 !== e) {
        var t = { inner: {}, outer: {} },
            n = this.dimensions;switch (e) {case "VIEWPORT-TOP":
            t.inner = { position: "fixed", top: n.topSpacing, left: n.sidebarLeft - n.viewportLeft, width: n.sidebarWidth };break;case "VIEWPORT-BOTTOM":
            t.inner = { position: "fixed", top: "auto", left: n.sidebarLeft, bottom: n.bottomSpacing, width: n.sidebarWidth };break;case "CONTAINER-BOTTOM":case "VIEWPORT-UNBOTTOM":
            let i = this._getTranslate(0, n.translateY + "px");t.inner = i ? { transform: i } : { position: "absolute", top: n.translateY, width: n.sidebarWidth };}switch (e) {case "VIEWPORT-TOP":case "VIEWPORT-BOTTOM":case "VIEWPORT-UNBOTTOM":case "CONTAINER-BOTTOM":
            t.outer = { height: n.sidebarHeight, position: "relative" };}return t.outer = i.extend({ height: "", position: "" }, t.outer), t.inner = i.extend({ position: "relative", top: "", left: "", bottom: "", width: "", transform: this._getTranslate() }, t.inner), t;
      }
    }stickyPosition(t) {
      if (!this._breakpoint) {
        t = this._reStyle || t || !1;this.options.topSpacing, this.options.bottomSpacing;var n = this.getAffixType(),
            s = this._getStyle(n);if ((this.affixedType != n || t) && n) {
          let t = "affix." + n.toLowerCase().replace("viewport-", "") + e;i.eventTrigger(this.sidebar, t), "STATIC" === n ? i.removeClass(this.sidebar, this.options.stickyClass) : i.addClass(this.sidebar, this.options.stickyClass);for (let e in s.outer) {
            s.outer[e];this.sidebar.style[e] = s.outer[e];
          }for (let e in s.inner) {
            let t = "number" == typeof s.inner[e] ? "px" : "";this.sidebarInner.style[e] = s.inner[e] + t;
          }let a = "affixed." + n.toLowerCase().replace("viewport-", "") + e;i.eventTrigger(this.sidebar, a);
        } else this._initialized && (this.sidebarInner.style.left = s.inner.left);this.affixedType = n;
      }
    }_widthBreakpoint() {
      window.innerWidth <= this.options.minWidth ? (this._breakpoint = !0, this.affixedType = "STATIC", this.sidebar.removeAttribute("style"), i.removeClass(this.sidebar, this.options.stickyClass), this.sidebarInner.removeAttribute("style")) : this._breakpoint = !1;
    }updateSticky(e = {}) {
      this._running || (this._running = !0, (e => {
        requestAnimationFrame(() => {
          switch (e) {case "scroll":
              this._calcDimensionsWithScroll(), this.observeScrollDir(), this.stickyPosition();break;case "resize":default:
              this._widthBreakpoint(), this.calcDimensions(), this.stickyPosition(!0);}this._running = !1;
        });
      })(e.type));
    }_setSupportFeatures() {
      var e = this.support;e.transform = i.supportTransform(), e.transform3d = i.supportTransform(!0);
    }_getTranslate(e = 0, t = 0, i = 0) {
      return this.support.transform3d ? "translate3d(" + e + ", " + t + ", " + i + ")" : !!this.support.translate && "translate(" + e + ", " + t + ")";
    }destroy() {
      window.removeEventListener("resize", this, { caption: !1 }), window.removeEventListener("scroll", this, { caption: !1 }), this.sidebar.classList.remove(this.options.stickyClass), this.sidebar.style.minHeight = "", this.sidebar.removeEventListener("update" + e, this);var t = { inner: {}, outer: {} };t.inner = { position: "", top: "", left: "", bottom: "", width: "", transform: "" }, t.outer = { height: "", position: "" };for (let e in t.outer) this.sidebar.style[e] = t.outer[e];for (let e in t.inner) this.sidebarInner.style[e] = t.inner[e];this.options.resizeSensor && "undefined" != typeof ResizeSensor && (ResizeSensor.detach(this.sidebarInner, this.handleEvent), ResizeSensor.detach(this.container, this.handleEvent));
    }static supportTransform(e) {
      var t = !1,
          i = e ? "perspective" : "transform",
          n = i.charAt(0).toUpperCase() + i.slice(1),
          s = document.createElement("support").style;return (i + " " + ["Webkit", "Moz", "O", "ms"].join(n + " ") + n).split(" ").forEach(function (e, i) {
        if (void 0 !== s[e]) return t = e, !1;
      }), t;
    }static eventTrigger(e, t, i) {
      try {
        var n = new CustomEvent(t, { detail: i });
      } catch (e) {
        (n = document.createEvent("CustomEvent")).initCustomEvent(t, !0, !0, i);
      }e.dispatchEvent(n);
    }static extend(e, t) {
      var i = {};for (let n in e) void 0 !== t[n] ? i[n] = t[n] : i[n] = e[n];return i;
    }static offsetRelative(e) {
      var t = { left: 0, top: 0 };do {
        let i = e.offsetTop,
            n = e.offsetLeft;isNaN(i) || (t.top += i), isNaN(n) || (t.left += n), e = "BODY" === e.tagName ? e.parentElement : e.offsetParent;
      } while (e);return t;
    }static addClass(e, t) {
      i.hasClass(e, t) || (e.classList ? e.classList.add(t) : e.className += " " + t);
    }static removeClass(e, t) {
      i.hasClass(e, t) && (e.classList ? e.classList.remove(t) : e.className = e.className.replace(new RegExp("(^|\\b)" + t.split(" ").join("|") + "(\\b|$)", "gi"), " "));
    }static hasClass(e, t) {
      return e.classList ? e.classList.contains(t) : new RegExp("(^| )" + t + "( |$)", "gi").test(e.className);
    }
  }return i;
})();window.StickySidebar = StickySidebar;